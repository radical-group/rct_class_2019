# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import func_exec_pb2 as func__exec__pb2


class FuncExecStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetTask = channel.unary_unary(
        '/FuncExec/GetTask',
        request_serializer=func__exec__pb2.TaskRequest.SerializeToString,
        response_deserializer=func__exec__pb2.TaskReply.FromString,
        )
    self.RunExec = channel.unary_unary(
        '/FuncExec/RunExec',
        request_serializer=func__exec__pb2.TaskRequest.SerializeToString,
        response_deserializer=func__exec__pb2.TaskReply.FromString,
        )


class FuncExecServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RunExec(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FuncExecServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetTask': grpc.unary_unary_rpc_method_handler(
          servicer.GetTask,
          request_deserializer=func__exec__pb2.TaskRequest.FromString,
          response_serializer=func__exec__pb2.TaskReply.SerializeToString,
      ),
      'RunExec': grpc.unary_unary_rpc_method_handler(
          servicer.RunExec,
          request_deserializer=func__exec__pb2.TaskRequest.FromString,
          response_serializer=func__exec__pb2.TaskReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FuncExec', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
